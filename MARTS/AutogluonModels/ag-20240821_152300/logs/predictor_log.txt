Beginning AutoGluon training...
AutoGluon will save models to 'AutogluonModels\ag-20240821_152300'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.9.13
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.19044
CPU Count:          4
GPU Count:          0
Memory Avail:       9.44 GB / 15.91 GB (59.3%)
Disk Space Avail:   1.58 GB / 442.61 GB (0.4%)
	WARNING: Available disk space is low and there is a risk that AutoGluon will run out of disk during fit, causing an exception. 
	We recommend a minimum available disk space of 10 GB, and large datasets may require more.
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': 'D',
 'hyperparameters': 'default',
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 549,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'AVG',
 'verbosity': 2}

train_data with frequency 'None' has been resampled to frequency 'D'.
Provided train_data has 2586 rows (NaN fraction=15.0%), 1 time series. Median time series length is 2586 (min=2586, max=2586). 

Provided data contains following columns:
	target: 'AVG'
	past_covariates:
		categorical:        []
		continuous (float): ['open', 'high', 'low', 'close']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-08-21 12:23:04
Models that will be trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'Chronos[base]', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST']
Training timeseries model SeasonalNaive. 
	-1.9764       = Validation score (-MASE)
	0.05    s     = Training runtime
	6.09    s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. 
	-3.7410       = Validation score (-MASE)
	15.52   s     = Training runtime
	29.75   s     = Validation (prediction) runtime
Training timeseries model DirectTabular. 
	-16.7205      = Validation score (-MASE)
	2.35    s     = Training runtime
	0.27    s     = Validation (prediction) runtime
Training timeseries model CrostonSBA. 
	-3.1601       = Validation score (-MASE)
	0.05    s     = Training runtime
	19.55   s     = Validation (prediction) runtime
Training timeseries model NPTS. 
	-15.9160      = Validation score (-MASE)
	0.06    s     = Training runtime
	23.69   s     = Validation (prediction) runtime
Training timeseries model DynamicOptimizedTheta. 
	-1.4170       = Validation score (-MASE)
	0.03    s     = Training runtime
	52.37   s     = Validation (prediction) runtime
Training timeseries model AutoETS. 
	-1.4813       = Validation score (-MASE)
	0.03    s     = Training runtime
	55.64   s     = Validation (prediction) runtime
Training timeseries model AutoARIMA. 
	-1.4125       = Validation score (-MASE)
	0.03    s     = Training runtime
	32.38   s     = Validation (prediction) runtime
Training timeseries model Chronos[base]. 
	Warning: Exception caused Chronos[base] to fail during training... Skipping this model.
	Chronos[base]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Training timeseries model TemporalFusionTransformer. 
	-5.0719       = Validation score (-MASE)
	12454.98 s    = Training runtime
	0.39    s     = Validation (prediction) runtime
Training timeseries model DeepAR. 
	-19.3123      = Validation score (-MASE)
	1171.32 s     = Training runtime
	5.82    s     = Validation (prediction) runtime
Training timeseries model PatchTST. 
	-2.1426       = Validation score (-MASE)
	322.31  s     = Training runtime
	0.18    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'AutoARIMA': 0.03, 'AutoETS': 0.02, 'CrostonSBA': 0.24, 'DynamicOptimizedTheta': 0.51, 'PatchTST': 0.18, 'SeasonalNaive': 0.01}
	-1.1245       = Validation score (-MASE)
	1.02    s     = Training runtime
	166.22  s     = Validation (prediction) runtime
Training complete. Models trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST', 'WeightedEnsemble']
Total runtime: 14194.58 s
Best model: WeightedEnsemble
Best model score: -1.1245
data with frequency 'None' has been resampled to frequency 'D'.
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
